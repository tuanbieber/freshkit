import React, { useState } from 'react';
import './Community.css';

const Community = () => {
  const [posts, setPosts] = useState([
    {
      id: 1,
      user: {
        name: 'Nguy·ªÖn Th·ªã Hoa',
        avatar: 'üë©‚Äçüç≥',
        verified: true
      },
      images: [
        'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=500',
        'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=500',
        'https://images.unsplash.com/photo-1567620905732-2d1ec7ab7445?w=500'
      ],
      caption: 'H√¥m nay l√†m m√≥n Ph·ªü B√≤ theo c√¥ng th·ª©c FreshKit! üçú N∆∞·ªõc d√πng ng·ªçt thanh, th·ªãt b√≤ m·ªÅm, rau th∆°m t∆∞∆°i. C·∫£ nh√† ƒë·ªÅu khen ngon! #FreshKit #PhoBo #CookingAtHome',
      likes: 1247,
      comments: 89,
      timeAgo: '2 gi·ªù tr∆∞·ªõc',
      liked: false
    },
    {
      id: 2,
      user: {
        name: 'Tr·∫ßn VƒÉn Minh',
        avatar: 'üë®‚Äçüç≥',
        verified: false
      },
      images: [
        'https://images.unsplash.com/photo-1563379091339-03246963d4d0?w=500',
        'https://images.unsplash.com/photo-1565299507177-b0ac66763828?w=500'
      ],
      caption: 'L·∫ßn ƒë·∫ßu th·ª≠ m√≥n B√∫n Ch·∫£ theo h∆∞·ªõng d·∫´n FreshKit! Th·ªãt n∆∞·ªõng th∆°m l·ª´ng, n∆∞·ªõc ch·∫•m chua ng·ªçt v·ª´a mi·ªáng. C·∫£m ∆°n FreshKit ƒë√£ chia s·∫ª c√¥ng th·ª©c tuy·ªát v·ªùi! üî•',
      likes: 892,
      comments: 45,
      timeAgo: '5 gi·ªù tr∆∞·ªõc',
      liked: true
    },
    {
      id: 3,
      user: {
        name: 'L√™ Th·ªã H∆∞∆°ng',
        avatar: 'üë©‚Äçüç≥',
        verified: true
      },
      images: [
        'https://images.unsplash.com/photo-1565299585323-38174c4a4a0a?w=500',
        'https://images.unsplash.com/photo-1563379091339-03246963d4d0?w=500',
        'https://images.unsplash.com/photo-1567620905732-2d1ec7ab7445?w=500',
        'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=500'
      ],
      caption: 'C∆°m t·∫•m s∆∞·ªùn n∆∞·ªõng - m√≥n ƒÉn ƒë·∫∑c s·∫£n mi·ªÅn Nam! S∆∞·ªùn n∆∞·ªõng th∆°m, c∆°m t·∫•m d·∫ªo, ch·∫£ tr·ª©ng m·ªÅm. FreshKit gi√∫p m√¨nh n·∫•u ngon nh∆∞ nh√† h√†ng! üçö‚ú®',
      likes: 2156,
      comments: 156,
      timeAgo: '1 ng√†y tr∆∞·ªõc',
      liked: false
    },
    {
      id: 4,
      user: {
        name: 'Ph·∫°m ƒê·ª©c Anh',
        avatar: 'üë®‚Äçüç≥',
        verified: false
      },
      images: [
        'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?w=500'
      ],
      caption: 'B√°nh m√¨ pate - b·ªØa s√°ng ho√†n h·∫£o! Pate t·ª± l√†m th∆°m ngon, rau c·ªß t∆∞∆°i gi√≤n. FreshKit ƒë√£ thay ƒë·ªïi c√°ch m√¨nh n·∫•u ƒÉn! ü•ñ',
      likes: 634,
      comments: 23,
      timeAgo: '2 ng√†y tr∆∞·ªõc',
      liked: true
    },
    {
      id: 5,
      user: {
        name: 'V√µ Th·ªã Lan',
        avatar: 'üë©‚Äçüç≥',
        verified: true
      },
      images: [
        'https://images.unsplash.com/photo-1567620905732-2d1ec7ab7445?w=500',
        'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=500'
      ],
      caption: 'Ch√® ƒë·∫≠u ƒë·ªè - m√≥n tr√°ng mi·ªáng truy·ªÅn th·ªëng! ƒê·∫≠u ƒë·ªè m·ªÅm ng·ªçt, n∆∞·ªõc c·ªët d·ª´a th∆°m b√©o. C·∫£ nh√† ƒë·ªÅu th√≠ch! üçÆ #CheDoDo #Dessert #FreshKit',
      likes: 1789,
      comments: 98,
      timeAgo: '3 ng√†y tr∆∞·ªõc',
      liked: false
    }
  ]);

  const [currentImageIndex, setCurrentImageIndex] = useState({});

  const handleLike = (postId) => {
    setPosts(posts.map(post => 
      post.id === postId 
        ? { 
            ...post, 
            liked: !post.liked, 
            likes: post.liked ? post.likes - 1 : post.likes + 1 
          }
        : post
    ));
  };

  const nextImage = (postId, totalImages) => {
    setCurrentImageIndex(prev => ({
      ...prev,
      [postId]: ((prev[postId] || 0) + 1) % totalImages
    }));
  };

  const prevImage = (postId, totalImages) => {
    setCurrentImageIndex(prev => ({
      ...prev,
      [postId]: prev[postId] === 0 ? totalImages - 1 : (prev[postId] || 0) - 1
    }));
  };

  return (
    <div className="community-page">
      <div className="container">
        <div className="community-header">
          <h1>C·ªông ƒë·ªìng FreshKit</h1>
          <p>Chia s·∫ª ni·ªÅm vui n·∫•u ƒÉn c√πng c·ªông ƒë·ªìng</p>
        </div>

        <div className="posts-container">
          {posts.map(post => (
            <div key={post.id} className="post-card">
              {/* Post Header */}
              <div className="post-header">
                <div className="user-info">
                  <div className="avatar">{post.user.avatar}</div>
                  <div className="user-details">
                    <div className="username">
                      {post.user.name}
                      {post.user.verified && <span className="verified">‚úì</span>}
                    </div>
                    <div className="post-time">{post.timeAgo}</div>
                  </div>
                </div>
                <button className="more-btn">‚ãØ</button>
              </div>

              {/* Post Images */}
              <div className="post-images">
                <div className="image-container">
                  <img 
                    src={post.images[currentImageIndex[post.id] || 0]} 
                    alt={`Post by ${post.user.name}`}
                    className="post-image"
                  />
                  
                  {post.images.length > 1 && (
                    <>
                      <button 
                        className="nav-btn prev-btn"
                        onClick={() => prevImage(post.id, post.images.length)}
                      >
                        ‚Äπ
                      </button>
                      <button 
                        className="nav-btn next-btn"
                        onClick={() => nextImage(post.id, post.images.length)}
                      >
                        ‚Ä∫
                      </button>
                      <div className="image-indicators">
                        {post.images.map((_, index) => (
                          <span 
                            key={index}
                            className={`indicator ${index === (currentImageIndex[post.id] || 0) ? 'active' : ''}`}
                          />
                        ))}
                      </div>
                    </>
                  )}
                </div>
              </div>

              {/* Post Actions */}
              <div className="post-actions">
                <div className="action-buttons">
                  <button 
                    className={`action-btn like-btn ${post.liked ? 'liked' : ''}`}
                    onClick={() => handleLike(post.id)}
                  >
                    {post.liked ? '‚ù§Ô∏è' : 'ü§ç'}
                  </button>
                  <button className="action-btn comment-btn">üí¨</button>
                  <button className="action-btn share-btn">üì§</button>
                </div>
                <button className="action-btn save-btn">üîñ</button>
              </div>

              {/* Post Content */}
              <div className="post-content">
                <div className="likes-count">
                  {post.likes.toLocaleString()} l∆∞·ª£t th√≠ch
                </div>
                <div className="caption">
                  <span className="username">{post.user.name}</span>
                  <span className="caption-text">{post.caption}</span>
                </div>
                {post.comments > 0 && (
                  <button className="view-comments">
                    Xem t·∫•t c·∫£ {post.comments} b√¨nh lu·∫≠n
                  </button>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Community;
